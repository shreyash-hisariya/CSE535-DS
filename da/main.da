import sys
import time
import random
import validator as validator
import client as client
from collections import OrderedDict
NOPS = 6
def operation(i): return lambda state: (state+[i], ['result',i,'on',state])
operations = {i: operation(i) for i in range(NOPS)}

def main():

    n_validators = 4
    n_clients = 1
    validator_ids = ['v1', 'v2', 'v3', 'v4']
    client_ids = ['c1']

    validators = list(new(validator.Validator, num= n_validators))
    clients = list(new(client.Client, num= n_clients))

    validator_dict = OrderedDict()
    for i in range(0, len(validator_ids)):
        id = validators[i]
        validator_dict[validator_ids[i]]=id

    for i in range(n_validators):
       setup(validators[i], args=(validator_ids[i], validator_dict, n_validators, clients))

    for i in range(n_clients):
       setup(clients[i], args=(clients[i], client_ids[i], validators, NOPS))

    start(validators)
    start(clients)
    await(each(c in clients, has=received(('done',), from_=c)))
    output('All clients done.')
#    send(('done',), to= (acceptors|replicas|leaders))